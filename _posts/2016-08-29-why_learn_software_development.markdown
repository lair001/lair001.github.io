---
layout: post
title:  "Why learn software development?"
date:   2016-08-28 20:50:22 -0400
---


Throughout my life, I have coded for my own convenience or amusement.  At the age of seven, I made some simple fill-in-the-blank stories using Applesoft BASIC.  In high school and college, I used Fortran 95 and computer algebra platforms such as Maple, Mathematica, and Matlab to solve math problems and run simulations.  More recently, I've privately modded grand strategy games by Paradox Interactive using Lua.

In the past, however, I saw programming as a mere tool or toy and sought more "important" work in physics, theoretical mathematics, and electrical engineering.  Although my first real job was in software maintence for Air Force Materiel Command, I was disappointed that I was not working on hardware.  Instead, I was working on a legacy software system that was over 20 years old and poorly structured, documented, and commented.  Eventually, I took a job as a patent examiner in hope of doing something more "important" by encouraging innovation through the patent system.

What I found during my time as a patent examiner and as a law student is that patent law in particular and the legal system in general is ripe for automation.  A patent examiner is essentially a human search engine. Meanwhile, the bread and butter of Biglaw consists of repetitive tasks that the incumbents have no incentive to optimize since they bill clients by the hour.  Now that court rulings have chipped away at the legal barriers preventing software from constituting legal counsel, a large wave of legal software startups is now upon us.  Indeed, the range of services offered by websites like LegalZoom grows daily and already runs the gamut from family law to intellectual property.

Given these factors and the fact that IT in general is growing rapidly at the expense of nearly every other sector of the economy, I realized that I was gravely mistaken to discount programming as a tool or toy.  Software development and engineering had grown to be the single most important field in the modern world.  I felt it was in my best interest to investigate what it would take to switch careers and quickly learned of various coding bootcamps and online degrees.  I applied to Oregon State University's online B.S. in Computer Science on June 16 and tried some exercises on FreeCodeCamp starting on June 17.

My experience with FreeCodeCamp taught me that I respond to coding more as recreation than as work.  The most fun I ever had in an academic pursuit was when working on mathematical proofs.  Mentally, coding feels just like doing a mathematical proof even when the project at hand has nothing to do with mathematics.  In fact, it is likely that my early encounter with Applesoft BASIC imprinted an affinity to coding on me and I like mathematics because I like coding.  Perhaps I never noticed this before because some of my prior coding experience was directly related to mathematics, some of it was related to modding a game, and my experience with Air Force Materiel Command was an exercise in frustration.  In other words, I had other reasons to either enjoy or dislike my prior coding work, and I never had a chance to judge my reaction to coding itself.

During and after some weeks in July and August involving setting up my computers to dual boot in Ubuntu and Windows 10, learning Bash, and participating in a coding competition, I was accepted to both Flatiron School's online campus and OSU's online B.S. in Computer Science.  However, I only intend to participate in Flatiron's program.  I am finding that my prior background has already equipped with the tools needed to understand the theoretical underpinnings of computer science, and Flatiron is doing a fine job of teaching me about the practical aspects of web development.

Originally, I investigated web development as an alternative means to break into the legal market.  Over the course of the past few months, however, I found that I greatly enjoy coding and find software development and engineering to be a highly relevant and vital endeavor.  Therefore, I do not plan to tie myself to legal software.  Instead, I will see where this ride will take me.
